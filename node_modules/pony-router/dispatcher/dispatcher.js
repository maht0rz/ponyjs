module.exports = function(){
    
    var self = this;
    
    this.parse = function(routes, alternatives){
        
        routes.forEach(function(route){
        
            route.regex = route.path;
            
            route.splitted = route.path.split('/');
            route.splitted.shift();
            var sLen = route.splitted.length;
            
            route.variables = [];
            
            for(alternative in alternatives){
                for(var i = 0; i < sLen; i++){
                    if( route.splitted[i].match(alternative) ){
                        route.splitted[i] = alternatives[alternative];
                        route.variables.push(i);
                    }else{
                        route.splitted[i] = '('+route.splitted[i]+')';
                    }
                }
            }
            
            route.regex = '(\\/)'+route.splitted.join('(\\/)');
        });
        
        return routes;
    }
    
    this.dispatch = function($, routes, request, response){
        /*
            handle request based on route passed
        */
        found = false;
        routes.forEach(function(route){ 
            var regx = '^'+route.regex+'$';
            var r = new RegExp(regx);
            
            if(r.test($.request.url) && ($.request.method == route.type || route.type == 'any') ){
                self.executeMatch($, route, request, response);
                found = true;
            }
        });
        
        if(!found){
            response.writeHead(404);
            response.write('Not found!');
            response.end();
        }
    };
    
    this.executeMatch = function($, route, request, response){
       
        var variables = [];
        
        var urlSplit = $.request.url.split('/');
        urlSplit.shift();
        
        route.variables.forEach(function(variable){
                variables.push(urlSplit[variable]);
        });
        
        variables.unshift($);
        
        var scope = {
            "request": request,
            "response": response
        }
        
        route.callback.apply(scope, variables);
        
    };
};