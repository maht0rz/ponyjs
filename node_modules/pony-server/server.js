module.exports = function(){
    
    var self = this;
    
    this.http = require('http');
    
    this.q = require('pony-queue');
    
    this.request = require('./request');
    
    /*
        Creates the actual server, bootstrapped with
        required functionality
        
        @param object cfg
        @param callable requestHandler
        @param array middleware
    */
    this.start = function($, requestHandler, middleware){
        
        var cfg = $.cfg.server;
        
        this.http.createServer((function($){
            
            var $ = $;
            
            return function(request, response){
                
                    var q = new self.q;

                    $.request = new self.request(request);

                    /*
                        Following lines may be changed in future
                        for performance improvements
                    */
                    middleware.forEach(function(action){
                        q.add(function($,request, response){
                            return function(next){
                                var scope = {
                                    "request": request,
                                    "response": response
                                }
                                action.apply(null, [$,next]);
                            };
                        }($, request, response));
                    });

                    /*
                        Wait till middleware execution is finished
                        and run the actual request handler
                    */
                    q.start(false, function(){
                        requestHandler($, request, response);
                    });
            }
            
        })($)).listen(cfg.port);
        
    };
}